{
  "name": "sloc",
  "version": "0.1.3",
  "main": "./lib/sloc",
  "bin": {
    "sloc": "./bin/sloc"
  },
  "description": "sloc is a simple tool to count SLOC (source lines of code)",
  "author": {
    "name": "Markus Kohlhase"
  },
  "bugs": {
    "url": "http://github.com/flosse/sloc/issues"
  },
  "contributors": [
    {
      "name": "Markus Kohlhase"
    },
    {
      "name": "feugy"
    },
    {
      "name": "Sören Gade"
    },
    {
      "name": "as3boyan"
    },
    {
      "name": "mark-hahn"
    },
    {
      "name": "hsablonniere"
    },
    {
      "name": "programmerby"
    },
    {
      "name": "daclayton"
    },
    {
      "name": "yoshi6jp"
    }
  ],
  "license": "MIT",
  "engine": "node",
  "dependencies": {
    "commander": "~2.3.0",
    "async": "~0.9.0",
    "cli-table": "^0.3.0",
    "readdirp": "^1.1.0"
  },
  "devDependencies": {
    "chai": "~1.9.1",
    "coffee-script": "~1.7.1",
    "mocha": "~1.21.3"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/flosse/sloc.git"
  },
  "maintainers": [
    {
      "name": "Markus Kohlhase",
      "email": "mail@markus-kohlhase.de",
      "url": "http://github.com/flosse/"
    }
  ],
  "scripts": {
    "prepublish": "coffee -c -o lib/ src/",
    "test": "mocha --reporter spec --compilers coffee:coffee-script/register --recursive spec/"
  },
  "readme": "# sloc\n\n\nCreate stats of your source code:\n\n- lines of code\n- lines with comments\n- lines with block comments\n- lines with single-line comments\n- lines mixed up with source and comments\n- empty lines\n- physical lines\n\n[![Build Status](https://secure.travis-ci.org/flosse/sloc.png)](http://travis-ci.org/flosse/sloc)\n[![Dependency Status](https://gemnasium.com/flosse/sloc.png)](https://gemnasium.com/flosse/sloc)\n[![NPM version](https://badge.fury.io/js/sloc.png)](http://badge.fury.io/js/sloc)\n\n## Supported languages\n\n\n- CoffeeScript\n- C / C++\n- CSS / SCSS / LESS / Stylus\n- Erlang\n- Go\n- HTML\n- Haxe\n- Java\n- JavaScript\n- Lua\n- LiveScript\n- Monkey\n- Python\n- PHP\n- Ruby\n- Scala\n- Typescript\n\n## Supported outputs\n\nsloc provides a set of output formatters:\n\n- CSV\n- JSON\n- Commandline table\n\n## Install\n\nTo use sloc as an application install it globally:\n\n```\nsudo npm install -g sloc\n```\n\nIf you're going to use it as a Node.js module within your project:\n\n```\nnpm install --save sloc\n```\n\n### Browser\n\nYou can also use sloc within your browser application.\n\nLink `sloc.js` in your HTML file:\n\n```html\n<script src=\"lib/sloc.js\"></script>\n```\n\nsloc is also available via [bower](http://twitter.github.com/bower/):\n\n```\nbower install sloc\n```\n\n## Usage\n\n### CLI\n\n```\nsloc [option] <file>|<directory>\n```\n\nOptions:\n\n```\n-h, --help                  output usage information\n-V, --version               output the version number\n-e, --exclude <regex>       regular expression to exclude files and folders\n-f, --format <format>       format output: json, csv, cli-table\n    --format-option [value] add formatter option\n-k, --keys <keys>           report only numbers of the given keys\n-d, --details               report stats of each analzed file\n```\n\ne.g.:\n\n```\n$ sloc src/\n\n---------- Result ------------\n\n            Physical :  1202\n              Source :  751\n             Comment :  322\n Single-line comment :  299\n       Block comment :  23\n               Mixed :  116\n               Empty :  245\n\nNumber of files read :  10\n\n------------------------------\n```\n\nor\n\n```\n$ sloc --details \\\n       --format cli-table \\\n       --keys total,source,comment \\\n       --exclude i18n*.\\.coffee \\\n       --format-option no-head src/\n\n┌─────────────────────────────────┬──────────┬────────┬─────────┐\n│ src/cli.coffee                  │ 98       │ 74     │ 7       │\n├─────────────────────────────────┼──────────┼────────┼─────────┤\n│ src/helpers.coffee              │ 26       │ 20     │ 0       │\n├─────────────────────────────────┼──────────┼────────┼─────────┤\n│ src/sloc.coffee                 │ 196      │ 142    │ 20      │\n├─────────────────────────────────┼──────────┼────────┼─────────┤\n│ src/formatters/simple.coffee    │ 44       │ 28     │ 7       │\n├─────────────────────────────────┼──────────┼────────┼─────────┤\n│ src/formatters/csv.coffee       │ 25       │ 14     │ 5       │\n├─────────────────────────────────┼──────────┼────────┼─────────┤\n│ src/formatters/cli-table.coffee │ 22       │ 13     │ 0       │\n└─────────────────────────────────┴──────────┴────────┴─────────┘\n```\n\n### Node.js\n\nOr use it in your own node module\n\n```javascript\nvar fs    = require('fs');\nvar sloc  = require('sloc');\n\nfs.readFile(\"mySourceFile.coffee\", \"utf8\", function(err, code){\n\n  if(err){ console.error(err); }\n  else{\n    var stats = sloc(code,\"coffee\");\n    for(i in sloc.keys){\n      var k = sloc.keys[i];\n      console.log(k + \" : \" + stats[k]);\n    }\n  }\n});\n```\n\n### Browser\n\n```javascript\nvar sourceCode = \"foo();\\n /* bar */\\n baz();\";\n\nvar stats = window.sloc(sourceCode,\"javascript\");\n```\n\n### Contribute an new formatter\n\n1. Fork this repo\n\n2. add the new formatter into `src/formatters/` that exports a\n   method with three arguments:\n   1. results (object)\n   2. global options (object)\n   3. formatter specific options (array)\n\n3. add the formatter in `src/cli.coffee`\n\n4. open a pull request\n\n### Grunt\n\nIf you'd like to use sloc within your grunt process you can use\n[grunt-sloc](https://github.com/rhiokim/grunt-sloc).\n\nInstall it:\n\n    npm install grunt-sloc --save-dev\n\nand use it:\n\n    grunt.loadNpmTasks('grunt-sloc');\n\nFor more details navigate to the\n[project site](https://github.com/rhiokim/grunt-sloc).\n\n### Gulp\n\nsloc is also available for gulp.\n\nInstall [gulp-sloc](https://github.com/oddjobsman/gulp-sloc):\n\n    npm install --save-dev gulp-sloc\n\nand use it:\n\n```javascript\nvar sloc = require('gulp-sloc');\n\ngulp.task('sloc', function(){\n  gulp.src(['scripts/*.js']).pipe(sloc());\n});\n```\n\n### [Atom](https://atom.io/)\n\n![screenshot](https://raw.githubusercontent.com/sgade/atom-sloc/master/assets/screen.png)\n\nYou can use [atom-sloc](https://github.com/sgade/atom-sloc) to display stats\nof the current file in the statusbar.\n\nAnd there is another great atom package called\n[line-count](https://github.com/mark-hahn/line-count) that gives you a more\ndetailed report showing line counts broken down by file, directory, and file\ntype for all files in the project.\n\n## Run tests\n\n    npm test\n\n## Changelog\n\nsee `CHANGELOG.md`\n\n## License\n\nsloc is licensed under the MIT license\n",
  "readmeFilename": "README.markdown",
  "homepage": "https://github.com/flosse/sloc",
  "_id": "sloc@0.1.3",
  "dist": {
    "shasum": "02d467f66a75527096ec6de6497fe40f6169ff40"
  },
  "_from": "sloc@",
  "_resolved": "https://registry.npmjs.org/sloc/-/sloc-0.1.3.tgz"
}
